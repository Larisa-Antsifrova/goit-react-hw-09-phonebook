{"version":3,"sources":["components/Main/Main.js","components/Section/Section.js","components/Section/Section.module.css","components/PageTitle/PageTitle.module.css","components/PageTitle/PageTitle.js","components/Title/Title.module.css","components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","components/ContactList/ContactList.module.css","views/NotFoundPage.js","components/Title/Title.js","redux/contacts/contacts-selectors.js","components/ContactForm/ContactForm.js","redux/contacts/contacts-operations.js","components/Filter/Filter.js","components/ContactList/ContactList.js","views/ContactsPage.js"],"names":["Main","children","Section","className","styles","section","Container","module","exports","PageTitle","title","defaultProps","NotFoundPage","Title","getFilterValue","state","contacts","filter","getAllContacts","items","getFilteredItems","createSelector","name","number","toLowerCase","includes","toLocaleLowerCase","getLoading","loading","ContactForm","useState","setName","setNumber","allContacts","useSelector","dispatch","useDispatch","handleInputChange","useCallback","event","currentTarget","value","handleSubmit","preventDefault","existingContact","find","contact","alert","newContact","trim","a","addContactRequest","axios","post","data","addContactSuccess","addContactError","message","form","onSubmit","type","onChange","required","btn","Filter","onUpdateFilter","updateFilter","target","filterValue","autoComplete","ContactList","this","props","fetchContacts","filtered","onDeleteContact","isLoading","loaderConfig","color","height","width","loader","_","isEmpty","map","id","item","onClick","notification","Component","connect","contactId","deleteContactRequest","delete","deleteContactSuccess","deleteContactError","deleteContact","fetchContactsRequest","get","fetchContactsSuccess","fetchContactsError","ContactsPage"],"mappings":"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","file":"static/js/contacts-page.4e200e67.chunk.js","sourcesContent":["// React imports\nimport React from 'react';\n\n// Imports of helpers\nimport PropTypes from 'prop-types';\n\nconst Main = ({ children }) => {\n  return <main>{children}</main>;\n};\n\nMain.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default Main;\n","// Imports from React\nimport React from 'react';\n// Imports of helpers\nimport PropTypes from 'prop-types';\n\nimport Container from '../Container';\n// Styles imports\nimport styles from './Section.module.css';\n\nconst Section = ({ children }) => {\n  return (\n    <section className={styles.section}>\n      <Container>{children}</Container>\n    </section>\n  );\n};\n\nSection.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default Section;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__2aPyg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"PageTitle_title__2xk4o\"};","// Imports from React\nimport React from 'react';\n// Imports of helpers\nimport PropTypes from 'prop-types';\n// Styles imports\nimport styles from './PageTitle.module.css';\n\nconst PageTitle = ({ title }) => {\n  return title && <h1 className={styles.title}>{title}</h1>;\n};\n\nPageTitle.defaultProps = {\n  title: '',\n};\n\nPageTitle.propTypes = {\n  title: PropTypes.string,\n};\n\nexport default PageTitle;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Title_title__39wGa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2SxIM\",\"btn\":\"ContactForm_btn__1n7b6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__hH5IZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts\":\"ContactList_contacts__3PXlp\",\"item\":\"ContactList_item__RcitZ\",\"btn\":\"ContactList_btn__3N4N3\",\"notification\":\"ContactList_notification__1Zn5w\",\"loader\":\"ContactList_loader__1KrZP\"};","// React imports\nimport React from 'react';\n\n// Components imports\nimport Main from '../components/Main';\nimport Section from '../components/Section';\nimport PageTitle from '../components/PageTitle';\n\nconst NotFoundPage = () => {\n  return (\n    <Main>\n      <Section>\n        <PageTitle title=\"404 Page not Found\" />\n      </Section>\n    </Main>\n  );\n};\n\nexport default NotFoundPage;\n","// Imports from React\nimport React from 'react';\n// Imports of helpers\nimport PropTypes from 'prop-types';\n// Styles imports\nimport styles from './Title.module.css';\n\nconst Title = ({ title }) => {\n  return title && <h2 className={styles.title}>{title}</h2>;\n};\n\nTitle.defaultProps = {\n  title: '',\n};\n\nTitle.propTypes = {\n  title: PropTypes.string,\n};\n\nexport default Title;\n","// Imports from Redux Toolkit\nimport { createSelector } from '@reduxjs/toolkit';\n\n// Selector to get filter value\nconst getFilterValue = state => state.contacts.filter;\n\n// Selector to get all contacts\nconst getAllContacts = state => state.contacts.items;\n\n// Selector to get filted contacts (to render in contacts list)\nconst getFilteredItems = createSelector(\n  [getAllContacts, getFilterValue],\n  (items, filter) =>\n    items.filter(\n      ({ name, number }) =>\n        name.toLowerCase().includes(filter.toLocaleLowerCase()) ||\n        number.includes(filter),\n    ),\n);\n\n// Selector to get loading status\nconst getLoading = state => state.contacts.loading;\n\nexport { getFilterValue, getAllContacts, getFilteredItems, getLoading };\n","// React imports\nimport React, { useCallback, useState } from 'react';\n\n// Imports from Redux\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from '../../redux/contacts/contacts-operations';\nimport { getAllContacts } from '../../redux/contacts/contacts-selectors';\n\n// Styles imports\nimport styles from './ContactForm.module.css';\n\nexport default function ContactForm() {\n  // Setting up state for input values\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  // Getting all contacts from store\n  const allContacts = useSelector(getAllContacts);\n  // Getting dispatch function\n  const dispatch = useDispatch();\n\n  // Function to handle inputs\n  const handleInputChange = useCallback(event => {\n    const { name, value } = event.currentTarget;\n    // Switching through input names to update the right slice of state and, thus, input value\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  }, []);\n\n  // Function to handle form submit\n  const handleSubmit = useCallback(\n    event => {\n      event.preventDefault();\n\n      if (!name) {\n        return;\n      }\n\n      // Checking if the contact already exists\n      const existingContact = allContacts.find(\n        contact => contact.name === name,\n      );\n\n      if (existingContact) {\n        alert(`${existingContact.name} is already in contacts.`);\n        return;\n      }\n\n      // If the contact does not exist, forming a new contact object\n      const newContact = { name: name.trim(), number: number.trim() };\n\n      // Dispatching action to add new contact to DB\n      dispatch(addContact(newContact));\n\n      // Reseting local state to clean up input values\n      setName('');\n      setNumber('');\n    },\n    [allContacts, dispatch, name, number],\n  );\n\n  return (\n    <form className={styles.form} onSubmit={handleSubmit}>\n      <label>\n        Name\n        <input\n          type=\"name\"\n          name=\"name\"\n          value={name}\n          onChange={handleInputChange}\n          required\n        />\n      </label>\n      <label>\n        Number\n        <input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleInputChange}\n          required\n        />\n      </label>\n      <button type=\"submit\" className={styles.btn}>\n        Add\n      </button>\n    </form>\n  );\n}\n","// Imports of actions\nimport {\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n} from './contacts-actions';\n\n// Imports of libraries\nimport axios from 'axios';\n\n// Function to fetch all contacts from DB\nconst fetchContacts = () => async dispatch => {\n  dispatch(fetchContactsRequest());\n\n  try {\n    const { data } = await axios.get('/contacts');\n    dispatch(fetchContactsSuccess(data));\n  } catch (error) {\n    dispatch(fetchContactsError(error.message));\n  }\n};\n\n// Function to add new contact to DB\nconst addContact = contact => async dispatch => {\n  dispatch(addContactRequest());\n\n  try {\n    const { data } = await axios.post('/contacts', contact);\n    dispatch(addContactSuccess(data));\n  } catch (error) {\n    dispatch(addContactError(error.message));\n  }\n};\n\n// Function to delete contact from DB\nconst deleteContact = contactId => async dispatch => {\n  dispatch(deleteContactRequest());\n\n  try {\n    await axios.delete(`/contacts/${contactId}`);\n    dispatch(deleteContactSuccess(contactId));\n  } catch (error) {\n    dispatch(deleteContactError(error.message));\n  }\n};\n\nexport { fetchContacts, addContact, deleteContact };\n","// React imports\nimport React, { useCallback } from 'react';\n\n// Imports from Redux\nimport { useSelector, useDispatch } from 'react-redux';\nimport { updateFilter } from '../../redux/contacts/contacts-actions';\nimport { getFilterValue } from '../../redux/contacts/contacts-selectors';\n\n// Styles imports\nimport styles from './Filter.module.css';\n\nexport default function Filter() {\n  const dispatch = useDispatch();\n  const onUpdateFilter = useCallback(\n    event => dispatch(updateFilter(event.target.value)),\n    [dispatch],\n  );\n  const filterValue = useSelector(getFilterValue);\n\n  return (\n    <div className={styles.filter}>\n      <label>\n        Find contacts by name\n        <input\n          type=\"text\"\n          name=\"filter\"\n          value={filterValue}\n          onChange={onUpdateFilter}\n          autoComplete=\"off\"\n          required\n        />\n      </label>\n    </div>\n  );\n}\n","// Imports from React\nimport React, { Component } from 'react';\n// Imports from Redux\nimport { connect } from 'react-redux';\nimport {\n  fetchContacts,\n  deleteContact,\n} from '../../redux/contacts/contacts-operations';\nimport {\n  getFilteredItems,\n  getLoading,\n} from '../../redux/contacts/contacts-selectors';\n// Imports of helpers\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\nimport Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n// Styles imports\nimport styles from './ContactList.module.css';\n\nclass ContactList extends Component {\n  static propTypes = {\n    filtered: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        name: PropTypes.string.isRequired,\n        number: PropTypes.string.isRequired,\n      }).isRequired,\n    ).isRequired,\n    onDeleteContact: PropTypes.func.isRequired,\n  };\n\n  componentDidMount() {\n    this.props.fetchContacts();\n  }\n\n  render() {\n    const { filtered, onDeleteContact, isLoading } = this.props;\n    const loaderConfig = {\n      type: 'TailSpin',\n      color: '#80cbc4',\n      height: 50,\n      width: 50,\n      className: styles.loader,\n    };\n\n    return (\n      <>\n        {isLoading && <Loader {...loaderConfig} />}\n\n        {!_.isEmpty(filtered) && (\n          <ul className={styles.contacts}>\n            {filtered.map(({ id, name, number }) => (\n              <li key={id} className={styles.item}>\n                <div>\n                  <p>{name}:</p>\n                  <p>{number}</p>\n                </div>\n\n                <button\n                  className={styles.btn}\n                  onClick={() => {\n                    onDeleteContact(id);\n                  }}\n                >\n                  Delete\n                </button>\n              </li>\n            ))}\n          </ul>\n        )}\n\n        {_.isEmpty(filtered) && !isLoading && (\n          <p className={styles.notification}>No contact found.</p>\n        )}\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  filtered: getFilteredItems(state),\n  isLoading: getLoading(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onDeleteContact: contactId => dispatch(deleteContact(contactId)),\n  fetchContacts: () => dispatch(fetchContacts()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","// React imports\nimport React from 'react';\n\n// Components imports\nimport Main from '../components/Main';\nimport Section from '../components/Section';\nimport Title from '../components/Title';\nimport ContactForm from '../components/ContactForm';\nimport Filter from '../components/Filter';\nimport ContactList from '../components/ContactList';\n\nconst ContactsPage = () => {\n  return (\n    <Main>\n      <Section>\n        <Title title=\"Add contacts\" />\n        <ContactForm />\n        <Title title=\"Find contacts\" />\n        <Filter />\n        <Title title=\"Contacts\" />\n        <ContactList />\n      </Section>\n    </Main>\n  );\n};\n\nexport default ContactsPage;\n"],"sourceRoot":""}
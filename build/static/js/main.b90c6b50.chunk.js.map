{"version":3,"sources":["redux/contacts/contacts-actions.js","redux/contacts/contacts-reducers.js","redux/auth/auth-reducers.js","redux/store.js","components/Logo/Logo.js","routes.js","redux/auth/auth-selectors.js","components/Navigation/Navigation.js","components/UserMenu/UserMenu.js","components/AuthNav/AuthNav.js","components/AppBar/AppBar.js","components/PrivateRoute/PrivateRoute.js","components/PublicRoute/PublicRoute.js","App.js","index.js","components/Navigation/Navigation.module.css","components/AuthNav/AuthNav.module.css","redux/auth/auth-operations.js","components/UserMenu/UserMenu.module.css","redux/auth/auth-actions.js","components/Container/Container.js","components/Container/Container.module.css","components/Logo/Logo.module.css","components/AppBar/AppBar.module.css"],"names":["fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","updateFilter","items","createReducer","_","payload","state","filter","contact","id","logoutSuccess","loading","error","contactsReducer","combineReducers","initialUserState","name","email","user","registerSuccess","loginSuccess","getCurrentUserSuccess","token","registerError","loginError","logoutError","getCurrentUserError","isAuthenticated","getCurrentUserRequest","authReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","contacts","auth","persistReducer","devTools","process","persistor","persistStore","Logo","className","styles","logo","routes","home","register","login","getIsAuthenticated","getUserEmail","Navigation","useSelector","NavLinksList","exact","to","NavLink","activeClassName","StyledChip","withStyles","root","backgroundColor","color","Chip","UserMenu","dispatch","useDispatch","onLogout","useCallback","logoutUser","userEmail","avatar","Avatar","label","onClick","logoutbutton","AuthNav","AppBar","position","Container","PrivateRoute","redirectTo","children","routeProps","PublicRoute","restricted","defaultProps","HomePage","lazy","LoginPage","RegisterPage","ContactsPage","NotFoundPage","App","useEffect","getCurrentUser","fallback","type","height","width","path","ReactDOM","render","StrictMode","document","getElementById","module","exports","axios","defaults","baseURL","authToken","headers","common","Authorization","registerUser","a","registerRequest","post","response","data","message","loginUser","loginRequest","logoutRequest","getState","get","container"],"mappings":"+IAAA,+VAIMA,EAAuBC,YAAa,iCACpCC,EAAuBD,YAAa,iCACpCE,EAAqBF,YAAa,+BAElCG,EAAoBH,YAAa,8BACjCI,EAAoBJ,YAAa,8BACjCK,EAAkBL,YAAa,4BAE/BM,EAAuBN,YAAa,iCACpCO,EAAuBP,YAAa,iCACpCQ,EAAqBR,YAAa,+BAGlCS,EAAeT,YAAa,2B,uMCK5BU,EAAQC,YAAc,IAAD,mBACxBV,KAAuB,SAACW,EAAD,YAAMC,WADL,cAExBT,KAAoB,SAACU,EAAD,YAAUD,SAAV,mBAAqCC,OAFjC,cAGxBP,KAAuB,SAACO,EAAD,OAAUD,EAAV,EAAUA,QAAV,OACtBC,EAAMC,QAAO,SAAAC,GAAO,OAAIA,EAAQC,KAAOJ,QAJhB,cAKxBK,KAAgB,iBAAM,MALE,IASrBH,EAASJ,YAAc,GAAD,eACzBF,KAAe,SAACG,EAAD,YAAMC,YAIlBM,EAAUR,aAAc,GAAD,mBAC1BZ,KAAuB,kBAAM,KADH,cAE1BE,KAAuB,kBAAM,KAFH,cAG1BC,KAAqB,kBAAM,KAHD,cAI1BC,KAAoB,kBAAM,KAJA,cAK1BC,KAAoB,kBAAM,KALA,cAM1BC,KAAkB,kBAAM,KANE,cAO1BC,KAAuB,kBAAM,KAPH,cAQ1BC,KAAuB,kBAAM,KARH,cAS1BC,KAAqB,kBAAM,KATD,IAavBY,EAAQT,YAAc,MAAD,mBACxBT,KAAqB,SAACU,EAAD,YAAMC,WADH,cAExBR,KAAkB,SAACO,EAAD,YAAMC,WAFA,cAGxBL,KAAqB,SAACI,EAAD,YAAMC,WAHH,IAMdQ,EAAkBC,YAAgB,CAC7CZ,QACAK,SACAI,UACAC,UCpCIG,EAAmB,CAAEC,KAAM,KAAMC,MAAO,MAGxCC,EAAOf,YAAcY,GAAD,iBAAC,EACxBI,KAAkB,SAACf,EAAD,YAAMC,QAAsBa,QADvB,YAAC,EAExBE,KAAe,SAAChB,EAAD,YAAMC,QAAsBa,QAFpB,YAAC,EAGxBR,KAAgB,kBAAMK,KAHC,YAAC,EAIxBM,KAAwB,SAACjB,EAAD,YAAMC,WAJP,IAQpBiB,EAAQnB,YAAc,MAAD,mBACxBgB,KAAkB,SAACf,EAAD,YAAMC,QAAsBiB,SADtB,cAExBF,KAAe,SAAChB,EAAD,YAAMC,QAAsBiB,SAFnB,cAGxBZ,KAAgB,kBAAM,QAHE,IAOrBE,EAAQT,YAAc,MAAD,iBAAC,EACzBoB,KAAgB,SAACnB,EAAD,YAAMC,WADE,YAAC,EAEzBmB,KAAa,SAACpB,EAAD,YAAMC,WAFK,YAAC,EAGzBoB,KAAc,SAACrB,EAAD,YAAMC,WAHI,YAAC,EAIzBqB,KAAsB,SAACtB,EAAD,YAAMC,WAJJ,IAQrBsB,EAAkBxB,aAAc,GAAD,iBAAC,EACnCgB,KAAkB,kBAAM,KADU,YAAC,EAEnCC,KAAe,kBAAM,KAFa,YAAC,EAGnCQ,KAAwB,kBAAM,KAHI,YAAC,EAInCP,KAAwB,kBAAM,KAJI,YAAC,EAKnCX,KAAgB,kBAAM,KALY,YAAC,EAMnCa,KAAgB,kBAAM,KANY,YAAC,EAOnCC,KAAa,kBAAM,KAPe,YAAC,EAQnCE,KAAsB,kBAAM,KARM,IAWxBG,EAAcf,YAAgB,CACzCI,OACAI,QACAK,kBACAf,UCzCIkB,EAAU,YACXC,YAAqB,CACtBC,kBAAmB,CACjBC,eAAgB,CAACC,IAAOC,IAAWC,IAAOC,IAASC,IAAOC,SAM1DC,EAAoB,CACxBC,IAAK,QACLC,YACAC,UAAW,CAAC,UAIRC,EAAQC,YAAe,CAC3BC,QAAS,CACPC,SAAUlC,EACVmC,KAAMC,YAAeT,EAAmBX,IAE1CC,aACAoB,UAAUC,IAINC,EAAYC,YAAaT,G,gECpChBU,EAJF,WACX,OAAO,cAAC,IAAD,CAAoBC,UAAWC,IAAOC,QCHhCC,EAPA,CACbC,KAAM,IACNC,SAAU,YACVC,MAAO,SACPd,SAAU,aCHNe,EAAqB,SAAAxD,GAAK,OAAIA,EAAM0C,KAAKrB,iBAIzCoC,EAAe,SAAAzD,GAAK,OAAIA,EAAM0C,KAAK9B,KAAKD,O,iBCY/B,SAAS+C,KACtB,IAAMrC,EAAkBsC,YAAYH,GAEpC,OACE,8BACE,qBAAIP,UAAWC,IAAOU,aAAtB,UACE,6BACE,cAAC,IAAD,CAASC,OAAK,EAACC,GAAIV,EAAOC,KAAMJ,UAAWC,IAAOa,QAAlD,SACE,cAAC,EAAD,QAGJ,6BACE,cAAC,IAAD,CACEF,OAAK,EACLC,GAAIV,EAAOC,KACXJ,UAAWC,IAAOa,QAClBC,gBAAiBd,IAAO,kBAJ1B,oBASD7B,GACC,6BACE,cAAC,IAAD,CACEyC,GAAIV,EAAOX,SACXQ,UAAWC,IAAOa,QAClBC,gBAAiBd,IAAO,kBAH1B,6B,kFCtBNe,GAAaC,aAAW,CAC5BC,KAAM,CACJC,gBAAiB,UACjBC,MAAO,YAHQH,CAKhBI,MAEY,SAASC,KACtB,IAAMC,EAAWC,cACXC,EAAWC,uBAAY,kBAAMH,EAASI,kBAAe,CAACJ,IACtDK,EAAYlB,YAAYF,GAE9B,OACE,sBAAKR,UAAWC,KAAOqB,SAAvB,UACE,cAACN,GAAD,CAAYa,OAAQ,cAACC,GAAA,EAAD,IAAYC,MAAOH,IACvC,wBAAQI,QAASP,EAAUzB,UAAWC,KAAOgC,aAA7C,SACE,cAAC,KAAD,S,wBCCOC,GAzBC,WACd,OACE,qBAAIlC,UAAWC,KAAOU,aAAtB,UACE,6BACE,cAAC,IAAD,CACEE,GAAIV,EAAOE,SACXL,UAAWC,KAAOa,QAClBC,gBAAiBd,KAAO,kBAH1B,wBAQF,6BACE,cAAC,IAAD,CACEY,GAAIV,EAAOG,MACXN,UAAWC,KAAOa,QAClBC,gBAAiBd,KAAO,kBAH1B,yB,8BCNO,SAASkC,KACtB,IAAM/D,EAAkBsC,YAAYH,GAEpC,OACE,cAAC,KAAD,CAAc6B,SAAS,SAAvB,SACE,cAACC,EAAA,EAAD,UACE,sBAAKrC,UAAWC,KAAOkC,OAAvB,UACE,cAAC1B,GAAD,IACCrC,EAAkB,cAACkD,GAAD,IAAe,cAAC,GAAD,W,kDCd7B,SAASgB,GAAT,GAAgE,IAAxCC,EAAuC,EAAvCA,WAAYC,EAA2B,EAA3BA,SAAaC,EAAc,0CACtErE,EAAkBsC,YAAYH,GAEpC,OACE,cAAC,IAAD,6BAAWkC,GAAX,aACGrE,EAAkBoE,EAAW,cAAC,IAAD,CAAU3B,GAAI0B,OCLnC,SAASG,GAAT,GAA+D,IAAxCH,EAAuC,EAAvCA,WAAYC,EAA2B,EAA3BA,SAAaC,EAAc,0CACrErE,EAAkBsC,YAAYH,GAEpC,OACE,cAAC,IAAD,6BAAWkC,GAAX,aACGrE,GAAmBqE,EAAWE,WAC7B,cAAC,IAAD,CAAU9B,GAAI0B,IAEdC,KAMRE,GAAYE,aAAe,CACzBD,YAAY,GCHd,IAAME,GAAWC,gBAAK,kBACpB,iCAEIC,GAAYD,gBAAK,kBACrB,uDAEIE,GAAeF,gBAAK,kBACxB,uDAEIG,GAAeH,gBAAK,kBACxB,uDAEII,GAAeJ,gBAAK,kBACxB,uDAGa,SAASK,KACtB,IAAM5B,EAAWC,cAMjB,OAJA4B,qBAAU,WACR7B,EAAS8B,kBACR,CAAC9B,IAGF,mCACE,eAAC,WAAD,CACE+B,SACE,cAAC,KAAD,CACEC,KAAK,WACLnC,MAAM,UACNoC,OAAQ,GACRC,MAAO,GACPzD,UAAU,WAPhB,UAWE,cAAC,GAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOY,OAAK,EAAC8C,KAAMvD,EAAOC,KAA1B,SACE,cAACyC,GAAD,MAGF,cAACH,GAAD,CACEgB,KAAMvD,EAAOE,SACbkC,WAAYpC,EAAOX,SACnBmD,YAAU,EAHZ,SAKE,cAACK,GAAD,MAGF,cAACN,GAAD,CACEgB,KAAMvD,EAAOG,MACbiC,WAAYpC,EAAOX,SACnBmD,YAAU,EAHZ,SAKE,cAACI,GAAD,MAGF,cAACT,GAAD,CAAcoB,KAAMvD,EAAOX,SAAU+C,WAAYpC,EAAOG,MAAxD,SACE,cAAC2C,GAAD,MAGF,cAAC,IAAD,UACE,cAACC,GAAD,c,cCnEZS,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAUxE,MAAOA,EAAjB,SACE,cAAC,IAAD,CAAajC,QAAQ,aAAayC,UAAWA,EAA7C,SACE,cAACsD,GAAD,YAKRW,SAASC,eAAe,U,mBC5B1BC,EAAOC,QAAU,CAAC,aAAe,iCAAiC,QAAU,4BAA4B,iBAAiB,qC,mBCAzHD,EAAOC,QAAU,CAAC,aAAe,8BAA8B,QAAU,yBAAyB,iBAAiB,kC,6NCiBnHC,IAAMC,SAASC,QAAU,2CAGzB,IAAMC,EAAY,SACZtG,GACFmG,IAAMC,SAASG,QAAQC,OAAOC,cAA9B,iBAAwDzG,IAFtDsG,EAAY,WAKdH,IAAMC,SAASG,QAAQC,OAAOC,cAAgB,IAK5CC,EAAe,SAAA9G,GAAI,8CAAI,WAAM4D,GAAN,eAAAmD,EAAA,6DAC3BnD,EAASoD,eADkB,kBAIFT,IAAMU,KAAK,gBAAiBjH,GAJ1B,OAInBkH,EAJmB,OAMzBR,EAAcQ,EAASC,KAAK/G,OAC5BwD,EAAS3D,YAAgBiH,EAASC,OAPT,gDASzBvD,EAASvD,YAAc,KAAM+G,UATJ,yDAAJ,uDAcnBC,EAAY,SAAArH,GAAI,8CAAI,WAAM4D,GAAN,eAAAmD,EAAA,6DACxBnD,EAAS0D,eADe,kBAICf,IAAMU,KAAK,eAAgBjH,GAJ5B,OAIhBkH,EAJgB,OAMtBR,EAAcQ,EAASC,KAAK/G,OAC5BwD,EAAS1D,YAAagH,EAASC,OAPT,gDAStBvD,EAAStD,YAAW,KAAM8G,UATJ,yDAAJ,uDAchBpD,EAAa,yDAAM,WAAMJ,GAAN,SAAAmD,EAAA,6DACvBnD,EAAS2D,eADc,kBAIfhB,IAAMU,KAAK,iBAJI,OAKrBP,IACA9C,EAASpE,eANY,gDAQrBoE,EAASrD,YAAY,KAAM6G,UARN,yDAAN,uDAab1B,EAAiB,yDAAM,WAAO9B,EAAU4D,GAAjB,mBAAAT,EAAA,2DAGvBS,IADMpH,EAFiB,EAEzB0B,KAAQ1B,MAFiB,wDAS3BsG,EAActG,GACdwD,EAASlD,eAVkB,kBAaF6F,IAAMkB,IAAI,kBAbR,OAanBP,EAbmB,OAezBtD,EAASzD,YAAsB+G,EAASC,OAff,kDAiBzBvD,EAASpD,YAAoB,KAAM4G,UAjBV,0DAAN,0D,mBCvEvBf,EAAOC,QAAU,CAAC,SAAW,2BAA2B,aAAe,iC,+BCDvE,maAGMU,EAAkB1I,YAAa,wBAC/B2B,EAAkB3B,YAAa,wBAC/B+B,EAAgB/B,YAAa,sBAE7BgJ,EAAehJ,YAAa,qBAC5B4B,EAAe5B,YAAa,qBAC5BgC,EAAahC,YAAa,mBAE1BiJ,EAAgBjJ,YAAa,sBAC7BkB,EAAgBlB,YAAa,sBAC7BiC,EAAcjC,YAAa,oBAE3BoC,EAAwBpC,YAAa,8BACrC6B,EAAwB7B,YAAa,8BACrCkC,EAAsBlC,YAAa,6B,mGCA1BoG,EARG,SAAC,GAAD,IAAGG,EAAH,EAAGA,SAAH,OAChB,qBAAKxC,UAAWC,IAAOoF,UAAvB,SAAmC7C,M,mBCTrCwB,EAAOC,QAAU,CAAC,UAAY,+B,mBCA9BD,EAAOC,QAAU,CAAC,KAAO,qB,mBCAzBD,EAAOC,QAAU,CAAC,OAAS,0B","file":"static/js/main.b90c6b50.chunk.js","sourcesContent":["// Imports from Redux Toolkit\nimport { createAction } from '@reduxjs/toolkit';\n\n// Actions for HTTP requests\nconst fetchContactsRequest = createAction('contacts/fetchContactsRequest');\nconst fetchContactsSuccess = createAction('contacts/fetchContactsSuccess');\nconst fetchContactsError = createAction('contacts/fetchContactsError');\n\nconst addContactRequest = createAction('contacts/addContactRequest');\nconst addContactSuccess = createAction('contacts/addContactSuccess');\nconst addContactError = createAction('contacts/addContactError');\n\nconst deleteContactRequest = createAction('contacts/deleteContactRequest');\nconst deleteContactSuccess = createAction('contacts/deleteContactSuccess');\nconst deleteContactError = createAction('contacts/deleteContactError');\n\n// Action to update filter\nconst updateFilter = createAction('phonebook/updateFilter');\n\nexport {\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  updateFilter,\n};\n","// Redux imports\nimport { combineReducers } from 'redux';\n\n// Imports from Redux Toolkit\nimport { createReducer } from '@reduxjs/toolkit';\n\n// Imports of actions\nimport {\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  updateFilter,\n} from './contacts-actions';\nimport { logoutSuccess } from '../auth/auth-actions';\n\n// Reducer to handle all contacts\nconst items = createReducer([], {\n  [fetchContactsSuccess]: (_, { payload }) => payload,\n  [addContactSuccess]: (state, { payload }) => [payload, ...state],\n  [deleteContactSuccess]: (state, { payload }) =>\n    state.filter(contact => contact.id !== payload),\n  [logoutSuccess]: () => [],\n});\n\n// Reducer to handle filter value\nconst filter = createReducer('', {\n  [updateFilter]: (_, { payload }) => payload,\n});\n\n// Reducer to handle loading status\nconst loading = createReducer(false, {\n  [fetchContactsRequest]: () => true,\n  [fetchContactsSuccess]: () => false,\n  [fetchContactsError]: () => false,\n  [addContactRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => false,\n  [deleteContactRequest]: () => true,\n  [deleteContactSuccess]: () => false,\n  [deleteContactError]: () => false,\n});\n\n// Reducer to handle error\nconst error = createReducer(null, {\n  [fetchContactsError]: (_, { payload }) => payload,\n  [addContactError]: (_, { payload }) => payload,\n  [deleteContactError]: (_, { payload }) => payload,\n});\n\nexport const contactsReducer = combineReducers({\n  items,\n  filter,\n  loading,\n  error,\n});\n","// Redux imports\nimport { combineReducers } from 'redux';\n\n// Imports from Redux Toolkit\nimport { createReducer } from '@reduxjs/toolkit';\n\n// Imports of actions\nimport {\n  // registerRequest,\n  registerSuccess,\n  registerError,\n  // loginRequest,\n  loginSuccess,\n  loginError,\n  // logoutRequest,\n  logoutSuccess,\n  logoutError,\n  getCurrentUserRequest,\n  getCurrentUserSuccess,\n  getCurrentUserError,\n} from './auth-actions';\n\n// Initial user state\nconst initialUserState = { name: null, email: null };\n\n// Reducer to handle user slice of the state\nconst user = createReducer(initialUserState, {\n  [registerSuccess]: (_, { payload }) => payload.user,\n  [loginSuccess]: (_, { payload }) => payload.user,\n  [logoutSuccess]: () => initialUserState,\n  [getCurrentUserSuccess]: (_, { payload }) => payload,\n});\n\n// Reducer to handle token slice of the state\nconst token = createReducer(null, {\n  [registerSuccess]: (_, { payload }) => payload.token,\n  [loginSuccess]: (_, { payload }) => payload.token,\n  [logoutSuccess]: () => null,\n});\n\n// Reducer to handle error slice of the state\nconst error = createReducer(null, {\n  [registerError]: (_, { payload }) => payload,\n  [loginError]: (_, { payload }) => payload,\n  [logoutError]: (_, { payload }) => payload,\n  [getCurrentUserError]: (_, { payload }) => payload,\n});\n\n// Reducer to handle authentication status slice of the state\nconst isAuthenticated = createReducer(false, {\n  [registerSuccess]: () => true,\n  [loginSuccess]: () => true,\n  [getCurrentUserRequest]: () => true,\n  [getCurrentUserSuccess]: () => true,\n  [logoutSuccess]: () => false,\n  [registerError]: () => false,\n  [loginError]: () => false,\n  [getCurrentUserError]: () => false,\n});\n\nexport const authReducer = combineReducers({\n  user,\n  token,\n  isAuthenticated,\n  error,\n});\n","// Imports from Redux Toolkit\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\n\n// Imports from Redux Persist\nimport storage from 'redux-persist/lib/storage';\n\n// Redux Persist fix\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\n\n// Imports of reducers\nimport { contactsReducer } from './contacts/contacts-reducers';\nimport { authReducer } from './auth/auth-reducers';\n\n// Config for middleware\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n];\n\n// Config for authorization slice of state to set token to Local Storage\nconst authPersistConfig = {\n  key: 'token',\n  storage,\n  whitelist: ['token'],\n};\n\n// Creating and configuring application store\nconst store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n    auth: persistReducer(authPersistConfig, authReducer),\n  },\n  middleware,\n  devTools: process.env.NODE_ENV !== 'production',\n});\n\n// Declaring persistor\nconst persistor = persistStore(store);\n\nexport { store, persistor };\n","// React imports\nimport React from 'react';\n\n// Component imports\nimport ImportContactsIcon from '@material-ui/icons/ImportContacts';\n\n// Styles imports\nimport styles from './Logo.module.css';\n\nconst Logo = () => {\n  return <ImportContactsIcon className={styles.logo} />;\n};\n\nexport default Logo;\n","const routes = {\n  home: '/',\n  register: '/register',\n  login: '/login',\n  contacts: '/contacts',\n};\n\nexport default routes;\n","// Selector to get authentication status\nconst getIsAuthenticated = state => state.auth.isAuthenticated;\n\n// // Selectors to get user info\nconst getUserName = state => state.auth.user.name;\nconst getUserEmail = state => state.auth.user.email;\n\nexport { getIsAuthenticated, getUserName, getUserEmail };\n","// React imports\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\n\n// Components imports\nimport Logo from '../Logo';\n\n// Routes imports\nimport routes from '../../routes';\n\n// Imports from Redux\nimport { useSelector } from 'react-redux';\nimport { getIsAuthenticated } from '../../redux/auth/auth-selectors';\n\n// Styles imports\nimport styles from './Navigation.module.css';\n\nexport default function Navigation() {\n  const isAuthenticated = useSelector(getIsAuthenticated);\n\n  return (\n    <nav>\n      <ul className={styles.NavLinksList}>\n        <li>\n          <NavLink exact to={routes.home} className={styles.NavLink}>\n            <Logo />\n          </NavLink>\n        </li>\n        <li>\n          <NavLink\n            exact\n            to={routes.home}\n            className={styles.NavLink}\n            activeClassName={styles['NavLink-active']}\n          >\n            Home\n          </NavLink>\n        </li>\n        {isAuthenticated && (\n          <li>\n            <NavLink\n              to={routes.contacts}\n              className={styles.NavLink}\n              activeClassName={styles['NavLink-active']}\n            >\n              Contacts\n            </NavLink>\n          </li>\n        )}\n      </ul>\n    </nav>\n  );\n}\n","// Imports from React\nimport React, { useCallback } from 'react';\n\n// Imports of components\nimport Chip from '@material-ui/core/Chip';\nimport Avatar from '@material-ui/core/Avatar';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\n\n// Imports from Redux\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getUserEmail } from '../../redux/auth/auth-selectors';\nimport { logoutUser } from '../../redux/auth/auth-operations';\n\n// Styles imports\nimport styles from './UserMenu.module.css';\nimport { withStyles } from '@material-ui/core/styles';\n\n// Customization of default Chip component from Matarial-UI\nconst StyledChip = withStyles({\n  root: {\n    backgroundColor: '#283593',\n    color: '#ffffff',\n  },\n})(Chip);\n\nexport default function UserMenu() {\n  const dispatch = useDispatch();\n  const onLogout = useCallback(() => dispatch(logoutUser()), [dispatch]);\n  const userEmail = useSelector(getUserEmail);\n\n  return (\n    <div className={styles.UserMenu}>\n      <StyledChip avatar={<Avatar />} label={userEmail} />\n      <button onClick={onLogout} className={styles.logoutbutton}>\n        <ExitToAppIcon />\n      </button>\n    </div>\n  );\n}\n","// React imports\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\n\n// Imports of routes\nimport routes from '../../routes';\n\n// Styles imports\nimport styles from './AuthNav.module.css';\n\nconst AuthNav = () => {\n  return (\n    <ul className={styles.NavLinksList}>\n      <li>\n        <NavLink\n          to={routes.register}\n          className={styles.NavLink}\n          activeClassName={styles['NavLink-active']}\n        >\n          Register\n        </NavLink>\n      </li>\n      <li>\n        <NavLink\n          to={routes.login}\n          className={styles.NavLink}\n          activeClassName={styles['NavLink-active']}\n        >\n          Login\n        </NavLink>\n      </li>\n    </ul>\n  );\n};\n\nexport default AuthNav;\n","// React imports\nimport React from 'react';\n\n// Components imports\nimport Container from '../Container';\nimport Navigation from '../Navigation';\nimport UserMenu from '../UserMenu';\nimport AuthNav from '../AuthNav';\n\n// Imports from Redux\nimport { useSelector } from 'react-redux';\nimport { getIsAuthenticated } from '../../redux/auth/auth-selectors';\n\n// Styles imports\nimport { AppBar as PhoneBookBar } from '@material-ui/core';\nimport styles from './AppBar.module.css';\n\nexport default function AppBar() {\n  const isAuthenticated = useSelector(getIsAuthenticated);\n\n  return (\n    <PhoneBookBar position=\"static\">\n      <Container>\n        <div className={styles.AppBar}>\n          <Navigation />\n          {isAuthenticated ? <UserMenu /> : <AuthNav />}\n        </div>\n      </Container>\n    </PhoneBookBar>\n  );\n}\n","// React imports\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\n// Redux imports\nimport { useSelector } from 'react-redux';\nimport { getIsAuthenticated } from '../../redux/auth/auth-selectors';\n\n// Helpers imports\nimport PropTypes from 'prop-types';\n\nexport default function PrivateRoute({ redirectTo, children, ...routeProps }) {\n  const isAuthenticated = useSelector(getIsAuthenticated);\n\n  return (\n    <Route {...routeProps}>\n      {isAuthenticated ? children : <Redirect to={redirectTo} />}\n    </Route>\n  );\n}\n\nPrivateRoute.propTypes = {\n  redirectTo: PropTypes.string.isRequired,\n  children: PropTypes.node,\n  routeProps: PropTypes.shape({\n    path: PropTypes.string.isRequired,\n  }),\n};\n","// React imports\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\n// Redux imports\nimport { useSelector } from 'react-redux';\nimport { getIsAuthenticated } from '../../redux/auth/auth-selectors';\n\n// Helpers imports\nimport PropTypes from 'prop-types';\n\nexport default function PublicRoute({ redirectTo, children, ...routeProps }) {\n  const isAuthenticated = useSelector(getIsAuthenticated);\n\n  return (\n    <Route {...routeProps}>\n      {isAuthenticated && routeProps.restricted ? (\n        <Redirect to={redirectTo} />\n      ) : (\n        children\n      )}\n    </Route>\n  );\n}\n\nPublicRoute.defaultProps = {\n  restricted: true,\n};\n\nPublicRoute.propTypes = {\n  redirectTo: PropTypes.string.isRequired,\n  children: PropTypes.node,\n  routeProps: PropTypes.shape({\n    path: PropTypes.string.isRequired,\n    restricted: PropTypes.bool,\n  }),\n};\n","// React imports\nimport React, { Suspense, lazy, useEffect } from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\n// Components imports\nimport AppBar from './components/AppBar';\n\n// Helpers imports\nimport Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\n// Routes imports\nimport routes from './routes';\nimport PrivateRoute from './components/PrivateRoute';\nimport PublicRoute from './components/PublicRoute';\n\n// Imports from Redux\nimport { useDispatch } from 'react-redux';\n\n// Operations imports\nimport { getCurrentUser } from './redux/auth/auth-operations';\n\n// Lazy imports for views\nconst HomePage = lazy(() =>\n  import('./views/HomePage' /* webpackChunkName: \"home-page\" */),\n);\nconst LoginPage = lazy(() =>\n  import('./views/LoginPage' /* webpackChunkName: \"login-page\" */),\n);\nconst RegisterPage = lazy(() =>\n  import('./views/RegisterPage' /* webpackChunkName: \"register-page\" */),\n);\nconst ContactsPage = lazy(() =>\n  import('./views/ContactsPage' /* webpackChunkName: \"contacts-page\" */),\n);\nconst NotFoundPage = lazy(() =>\n  import('./views/NotFoundPage' /* webpackChunkName: \"contacts-page\" */),\n);\n\nexport default function App() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getCurrentUser());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Suspense\n        fallback={\n          <Loader\n            type=\"TailSpin\"\n            color=\"#80cbc4\"\n            height={80}\n            width={80}\n            className=\"loader\"\n          />\n        }\n      >\n        <AppBar />\n        <Switch>\n          <Route exact path={routes.home}>\n            <HomePage />\n          </Route>\n\n          <PublicRoute\n            path={routes.register}\n            redirectTo={routes.contacts}\n            restricted\n          >\n            <RegisterPage />\n          </PublicRoute>\n\n          <PublicRoute\n            path={routes.login}\n            redirectTo={routes.contacts}\n            restricted\n          >\n            <LoginPage />\n          </PublicRoute>\n\n          <PrivateRoute path={routes.contacts} redirectTo={routes.login}>\n            <ContactsPage />\n          </PrivateRoute>\n\n          <Route>\n            <NotFoundPage />\n          </Route>\n        </Switch>\n      </Suspense>\n    </>\n  );\n}\n","// React imports\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\n// Imports from Redux\nimport { Provider } from 'react-redux';\nimport { store, persistor } from './redux/store';\n\n// Imports from Redux Persist\nimport { PersistGate } from 'redux-persist/integration/react';\n\n// Components imports\nimport App from './App';\n\n// Styles imports\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store}>\n        <PersistGate loading=\"Loading...\" persistor={persistor}>\n          <App />\n        </PersistGate>\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavLinksList\":\"Navigation_NavLinksList__3aJPj\",\"NavLink\":\"Navigation_NavLink__W8Low\",\"NavLink-active\":\"Navigation_NavLink-active__3BvId\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavLinksList\":\"AuthNav_NavLinksList__1F1wv\",\"NavLink\":\"AuthNav_NavLink__33XVM\",\"NavLink-active\":\"AuthNav_NavLink-active__2zsLx\"};","// Imports of actions\nimport {\n  registerRequest,\n  registerSuccess,\n  registerError,\n  loginRequest,\n  loginSuccess,\n  loginError,\n  logoutRequest,\n  logoutSuccess,\n  logoutError,\n  getCurrentUserRequest,\n  getCurrentUserSuccess,\n  getCurrentUserError,\n} from './auth-actions';\n\n// Imports of libraries\nimport axios from 'axios';\naxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com';\n\n// Token object with methods to set and uset the token from headers\nconst authToken = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = '';\n  },\n};\n\n// Function to register a new user\nconst registerUser = user => async dispatch => {\n  dispatch(registerRequest());\n\n  try {\n    const response = await axios.post('/users/signup', user);\n\n    authToken.set(response.data.token);\n    dispatch(registerSuccess(response.data));\n  } catch (error) {\n    dispatch(registerError(error.message));\n  }\n};\n\n// Function to login an existing user\nconst loginUser = user => async dispatch => {\n  dispatch(loginRequest());\n\n  try {\n    const response = await axios.post('/users/login', user);\n\n    authToken.set(response.data.token);\n    dispatch(loginSuccess(response.data));\n  } catch (error) {\n    dispatch(loginError(error.message));\n  }\n};\n\n// Function to log out user\nconst logoutUser = () => async dispatch => {\n  dispatch(logoutRequest());\n\n  try {\n    await axios.post('/users/logout');\n    authToken.unset();\n    dispatch(logoutSuccess());\n  } catch (error) {\n    dispatch(logoutError(error.message));\n  }\n};\n\n// Function to get current user status\nconst getCurrentUser = () => async (dispatch, getState) => {\n  const {\n    auth: { token },\n  } = getState();\n\n  if (!token) {\n    return;\n  }\n\n  authToken.set(token);\n  dispatch(getCurrentUserRequest());\n\n  try {\n    const response = await axios.get('/users/current');\n\n    dispatch(getCurrentUserSuccess(response.data));\n  } catch (error) {\n    dispatch(getCurrentUserError(error.message));\n  }\n};\n\nexport { registerUser, loginUser, logoutUser, getCurrentUser };\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"UserMenu\":\"UserMenu_UserMenu__1Py6x\",\"logoutbutton\":\"UserMenu_logoutbutton__2PVFu\"};","// Imports from Redux Toolkit\nimport { createAction } from '@reduxjs/toolkit';\n\nconst registerRequest = createAction('auth/registerRequest');\nconst registerSuccess = createAction('auth/registerSuccess');\nconst registerError = createAction('auth/registerError');\n\nconst loginRequest = createAction('auth/loginRequest');\nconst loginSuccess = createAction('auth/loginSuccess');\nconst loginError = createAction('auth/loginError');\n\nconst logoutRequest = createAction('auth/logoutRequest');\nconst logoutSuccess = createAction('auth/logoutSuccess');\nconst logoutError = createAction('auth/logoutError');\n\nconst getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\nconst getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\nconst getCurrentUserError = createAction('auth/getCurrentUserError');\n\nexport {\n  registerRequest,\n  registerSuccess,\n  registerError,\n  logoutRequest,\n  logoutSuccess,\n  logoutError,\n  loginRequest,\n  loginSuccess,\n  loginError,\n  getCurrentUserRequest,\n  getCurrentUserSuccess,\n  getCurrentUserError,\n};\n","// React imports\nimport React from 'react';\n\n// Helpers imports\nimport PropTypes from 'prop-types';\n\n// Styles imports\nimport styles from './Container.module.css';\n\nconst Container = ({ children }) => (\n  <div className={styles.container}>{children}</div>\n);\n\nContainer.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default Container;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__2VMR6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"Logo_logo__1NGdJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AppBar\":\"AppBar_AppBar__3nMeq\"};"],"sourceRoot":""}